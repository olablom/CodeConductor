# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# CodeConductor specific
# Learning patterns storage
feedback/patterns.json
patterns.json

# Production artifacts (keep exports, ignore runtime data)
artifacts/runs/          # Runtime test results
artifacts/logs/          # Application logs
artifacts/temp/          # Temporary files
!artifacts/exports/      # Keep export bundles
!artifacts/exports/*.zip # Keep zip files

# Test result files
*_test_results.json
gui_test_results.json
simple_test_results.json
automated_test_results.json
live_gui_test_results_*.json
field_test_results_*.json
test_results_*.json

# Temporary test files (keep real tests in tests/)
*_snapshot.py
*_baseline.py
test_gui_live_automated.py
test_automated_suite.py
# DO NOT ignore committed tests under tests/

# Vector database
vector_db/
*.sqlite3

# Model files
*.zip
ppo_codeconductor.zip
*.pkl
*.pickle

# IDE files
.vscode/
.idea/
*.swp
*.swo

# OS files
.DS_Store
Thumbs.db

# Windows reserved filenames (avoid git index errors)
NUL
nul

# Logs
*.log
logs/
# Artifacts root (keep zip exports, ignore everything else by default)
artifacts/
.artifacts/
!artifacts/exports/
!artifacts/exports/*.zip
.tmp/
**/__pycache__/
configs/*.json

# GPU monitoring logs
gpu_memory_*.log
nvidia_smi_*.log

# Cache
.cache/
cache/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Python cache
__pycache__/
*.pyc
*.pyo
*.pyd

# Virtual environments
venv/
env/
.venv/
.env/

# Jupyter notebooks
.ipynb_checkpoints/

# Coverage reports
.coverage
htmlcov/

# Pytest cache
.pytest_cache/

# Local configuration
.env.local
.env.development.local
.env.test.local
.env.production.local

# Private validation files
EMPIRICAL_VALIDATION_PLAN.md
baseline_metrics.log
codeconductor_metrics.log

# Validation data
validation_log.csv
validation_logs/
validation_metrics.csv

# Vector database and backups
vector_db/
vector_db_backup/
*.sqlite3

# Test backup files
*_backup.csv
*_backup/

# Runtime logs
logs/
*.log

# Configuration files with sensitive data
configs/*.env
configs/*.key

# AI Project Advisor (temporary import)
ai-project-advisor/
